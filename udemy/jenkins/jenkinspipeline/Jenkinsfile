pipeline {
    agent any
    
    def project_root = 'udemy/jenkins/jenkinspipeline'
	
    parameters {
        string (name: 'tomcat_staging', defaultValue: 'tomcat_staging_1', description: 'Staging server')
        string (name: 'tomcat_production', defaultValue: 'tomcat_production_1', description: 'Production server')
    }

    triggers {
        pollSCM('* * * * *')
    }

    stages{
        stage('Build'){
            steps {
                dir (project_root) {
                    powershell "mvn clean package"
                }
            }
            post {
                success {
                    dir (project_root) {
                        echo "Now Archiving..."
                        archiveArtifacts artifacts: "**/target/*.war"
                    }
                }
            }
        }
        stage('Deploy')
        {
            parallel {
                stage('Deploy to Staging') {
                    steps {
                        dir (project_root) {
                            powershell "docker container cp **/target/*.war ${params.tomcat_staging}:/usr/local/tomcat/webapps/"
                        }
                    }
                }
                stage('Deploy to Production') {
                    steps {
                        timeout(time:5, unit:'DAYS') {
                            input message: 'Approve PRODUCTION deployment?'
                        }
                        dir (project_root) {
                            powershell "docker container cp **/target/*.war ${params.tomcat_production}:/usr/local/tomcat/webapps/"
                        }
                    }
                    post {
                        success {
                            echo 'Code deployed to production.'
                        }
                        failure {
                            echo 'Deployment failed.'
                        }
                    }
                }
            }
        }
    }
}
